{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","allTodos","todos","setSelectedUserId","useState","title","setTitle","filteringTodos","setFilteringTodos","searchTodos","filter","todo","includes","className","type","value","onChange","event","target","placeholder","name","completed","map","classNames","readOnly","checked","onClick","userId","id","BASE_URL","getTodos","a","fetch","request","json","getUser","CurrentUser","selectedUserId","currentUser","setCurrentUser","gettingUser","user","useEffect","undefined","username","email","phone","website","createdAt","App","setTodos","then","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7042c3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Dispatch, useState } from 'react';\nimport { Todo } from '../../react-app-env';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedUserId: Dispatch<number>;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, setSelectedUserId }) => {\n  const [title, setTitle] = useState('');\n  const [filteringTodos, setFilteringTodos] = useState('');\n  const searchTodos = todos.filter(todo => todo.title.includes(title));\n\n  const filterForTodo = (allTodos: Todo[]): Todo[] => {\n    if (filteringTodos === 'active') {\n      return allTodos.filter(todo => todo.completed === false);\n    }\n\n    if (filteringTodos === 'completed') {\n      return allTodos.filter(todo => todo.completed === true);\n    }\n\n    return allTodos;\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <input\n        type=\"text\"\n        className=\"input is-link mb-4\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder=\"Search by title\"\n        data-cy=\"filterByTitle\"\n      />\n\n      <select\n        name=\"filter\"\n        className=\"select is-info my-3\"\n        onChange={(event) => {\n          setFilteringTodos(event.target.value);\n        }}\n      >\n        <option value=\"all\">Show all</option>\n        <option value=\"active\">Show active</option>\n        <option value=\"completed\">Show completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filterForTodo(searchTodos).map((todo: Todo) => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly checked={todo.completed} />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedUserId(todo.userId);\n                }}\n                data-cy=\"userButton\"\n              >\n                {`User #${todo.userId} - info`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { Todo, User } from './react-app-env';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const request = await fetch(`${BASE_URL}/todos`);\n\n  return request.json();\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const request = await fetch(`${BASE_URL}/users/${userId}`);\n\n  return request.json();\n};\n","import React, { Dispatch, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../react-app-env';\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number,\n  setSelectedUserId: Dispatch<number>,\n}\n\nexport const CurrentUser: React.FC<Props> = ({\n  selectedUserId,\n  setSelectedUserId,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User>();\n\n  const gettingUser = async () => {\n    try {\n      const user = await getUser(selectedUserId);\n\n      setCurrentUser(user);\n    } catch (error) {\n      setSelectedUserId(0);\n    }\n  };\n\n  useEffect(() => {\n    gettingUser();\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {currentUser === undefined ? (\n        <p>Loading...</p>\n      )\n        : (\n          <>\n            {currentUser && (\n              <>\n                <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${currentUser?.id}`}</span></h2>\n\n                <h3 className=\"CurrentUser__username\">\n                  {currentUser.username}\n                </h3>\n                <h2\n                  className=\"CurrentUser__name\"\n                  data-cy=\"userName\"\n                >\n                  {currentUser.name}\n                </h2>\n                <p className=\"CurrentUser__email\">{currentUser.email}</p>\n                <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n                <p className=\"CurrentUser__website\">{currentUser.website}</p>\n                <p className=\"CurrentUser__createdAt\">\n                  {currentUser.createdAt}\n                </p>\n\n                <button\n                  className=\"CurrentUser__clear button is-info is-rounded\"\n                  type=\"button\"\n                  onClick={() => (setSelectedUserId(0))}\n                >\n                  Clear\n                </button>\n              </>\n            )}\n          </>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { Todo } from './react-app-env';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList todos={todos} setSelectedUserId={setSelectedUserId} />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              selectedUserId={selectedUserId}\n              setSelectedUserId={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}